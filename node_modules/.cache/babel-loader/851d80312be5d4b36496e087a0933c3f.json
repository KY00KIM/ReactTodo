{"ast":null,"code":"var _jsxFileName = \"/Users/kimkyumin/Documents/GitHub/SchduleApp/schedule-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useRef, useCallback } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '리액트의 기초 알아보기',\n    checked: true\n  }, {\n    id: 2,\n    text: '컴포넌트 스타일링해 보기',\n    checked: false\n  }, {\n    id: 3,\n    text: '일정관리앱을 만들어 보자',\n    checked: false\n  }]);\n  const nextId = useRef(4);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current++;\n  }, [todos]);\n  const onRemove = useCallback(id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(TodoTemplate, {\n    children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n      onInsert: onInsert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Rvc+tjwwHOlfj0Tkh3g2rv8iU4A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kimkyumin/Documents/GitHub/SchduleApp/schedule-app/src/App.js"],"names":["React","useState","useRef","useCallback","TodoInsert","TodoList","TodoTemplate","App","todos","setTodos","id","text","checked","nextId","onInsert","todo","current","concat","onRemove","filter"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AACES,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANiC,EAWjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAXiC,CAAD,CAAlC;AAkBA,QAAMC,MAAM,GAAGX,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMY,QAAQ,GAAGX,WAAW,CAC1BQ,IAAI,IAAI;AACN,UAAMI,IAAI,GAAG;AACXL,MAAAA,EAAE,EAAEG,MAAM,CAACG,OADA;AAEXL,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAH,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAF,IAAAA,MAAM,CAACG,OAAP;AACD,GATyB,EAU1B,CAACR,KAAD,CAV0B,CAA5B;AAaA,QAAMU,QAAQ,GAAGf,WAAW,CAC1BO,EAAE,IAAI;AACJD,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAHyB,EAI1B,CAACF,KAAD,CAJ0B,CAA5B;AAOA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEM;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEN,KAAjB;AAAwB,MAAA,QAAQ,EAAEU;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhDD;;GAAMX,G;;KAAAA,G;AAkDN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useState, useRef, useCallback } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from \"./components/TodoTemplate\";\n\nconst App = () => {\n\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '리액트의 기초 알아보기',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '컴포넌트 스타일링해 보기',\n      checked: false,\n    },\n    {\n      id: 3,\n      text: '일정관리앱을 만들어 보자',\n      checked: false,\n    },\n  ]);\n\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current++;\n    },\n    [todos],\n  )\n\n  const onRemove = useCallback(\n    id => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    },\n    [todos],\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}